name: Deploy ShopHikes to Lightsail

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # Repository variables only (as configured in your repo settings)
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ vars.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ vars.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ vars.NEXT_PUBLIC_SANITY_API_VERSION }}
      NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}

      SANITY_API_READ_TOKEN: ${{ vars.SANITY_API_READ_TOKEN }}
      SANITY_API_TOKEN: ${{ vars.SANITY_API_TOKEN }}

      SSH_USER: ${{ vars.SSH_USER }}
      SSH_HOST: ${{ vars.SSH_HOST }}
      SSH_PRIVATE_KEY: ${{ vars.SSH_PRIVATE_KEY }}

      APP_DIR: ${{ vars.APP_DIR }}
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.19.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Next.js build cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', 'next.config.*', 'tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-

      - name: Sanitize public env and assert
        shell: bash
        run: |
          set -euo pipefail
          strip(){ v="$1"; v="${v//\"/}"; v="${v//\'/}"; v="${v// /}"; printf '%s' "$v"; }
          echo "NEXT_PUBLIC_SANITY_PROJECT_ID=$(strip "${NEXT_PUBLIC_SANITY_PROJECT_ID:-}")" >> "$GITHUB_ENV"
          echo "NEXT_PUBLIC_SANITY_DATASET=$(strip "${NEXT_PUBLIC_SANITY_DATASET:-}")"       >> "$GITHUB_ENV"
          echo "NEXT_PUBLIC_SANITY_API_VERSION=$(strip "${NEXT_PUBLIC_SANITY_API_VERSION:-2025-10-28}")" >> "$GITHUB_ENV"
          echo "NEXT_PUBLIC_BASE_URL=$(strip "${NEXT_PUBLIC_BASE_URL:-}")"                   >> "$GITHUB_ENV"
          : "${NEXT_PUBLIC_SANITY_PROJECT_ID:?Missing NEXT_PUBLIC_SANITY_PROJECT_ID}"
          : "${NEXT_PUBLIC_SANITY_DATASET:?Missing NEXT_PUBLIC_SANITY_DATASET}"

      - name: Build (standalone)
        run: pnpm run build

      - name: Package standalone
        shell: bash
        run: |
          set -euo pipefail
          test -f ".next/standalone/server.js" || { echo "Missing .next/standalone/server.js"; exit 1; }
          SHORT_SHA="${GITHUB_SHA::7}"
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          rm -rf out && mkdir -p out
          cp -r .next/standalone out/standalone
          cp -r .next/static out/standalone/.next/static
          if [ -d public ]; then cp -r public out/standalone/public; fi
          tar -C out -czf "shophikes_${SHORT_SHA}.tar.gz" standalone

      - name: Setup SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf '%s\n' "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          sed -i 's/\r$//' ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=yes -o BatchMode=yes "$SSH_USER@$SSH_HOST" true

      - name: Create ecosystem.config.js (YAML-safe)
        shell: bash
        run: |
          set -euo pipefail
          : > ecosystem.config.js
          echo 'module.exports = {' >> ecosystem.config.js
          echo '  apps: [' >> ecosystem.config.js
          echo '    {' >> ecosystem.config.js
          echo '      name: "shophikes",' >> ecosystem.config.js
          echo '      cwd: "/home/bitnami/htdocs/Ecommerce-with-sanity/current",' >> ecosystem.config.js
          echo '      script: "standalone/server.js",' >> ecosystem.config.js
          echo '      instances: 1,' >> ecosystem.config.js
          echo '      exec_mode: "cluster",' >> ecosystem.config.js
          echo '      env: {' >> ecosystem.config.js
          echo '        PORT: 3005,' >> ecosystem.config.js
          echo '        NODE_ENV: "production",' >> ecosystem.config.js
          echo '        SANITY_API_READ_TOKEN: "__SANITY_API_READ_TOKEN__",' >> ecosystem.config.js
          echo '        SANITY_API_TOKEN: "__SANITY_API_TOKEN__"' >> ecosystem.config.js
          echo '      }' >> ecosystem.config.js
          echo '    }' >> ecosystem.config.js
          echo '  ]' >> ecosystem.config.js
          echo '}' >> ecosystem.config.js
          READ_ESC=$(printf "%s" "${SANITY_API_READ_TOKEN:-}" | sed -e 's/[\/&]/\\&/g')
          WRITE_ESC=$(printf "%s" "${SANITY_API_TOKEN:-}"     | sed -e 's/[\/&]/\\&/g')
          sed -i "s/__SANITY_API_READ_TOKEN__/${READ_ESC}/g" ecosystem.config.js
          sed -i "s/__SANITY_API_TOKEN__/${WRITE_ESC}/g"     ecosystem.config.js

      - name: Upload artifact + ecosystem
        run: |
          scp -i ~/.ssh/id_rsa "shophikes_${SHORT_SHA}.tar.gz" "$SSH_USER@$SSH_HOST:/tmp/"
          scp -i ~/.ssh/id_rsa ecosystem.config.js            "$SSH_USER@$SSH_HOST:/tmp/"

      - name: Activate release and start via PM2
        run: |
          ssh -i ~/.ssh/id_rsa "$SSH_USER@$SSH_HOST" "
            set -euo pipefail
            RELEASES_DIR='${APP_DIR}/releases'
            CURRENT_LINK='${APP_DIR}/current'
            NEW_RELEASE_DIR=\"\$RELEASES_DIR/${SHORT_SHA}\"
            mkdir -p \"\$RELEASES_DIR\" '${APP_DIR}'/logs
            rm -rf \"\$NEW_RELEASE_DIR\" && mkdir -p \"\$NEW_RELEASE_DIR\"
            tar -xzf \"/tmp/shophikes_${SHORT_SHA}.tar.gz\" -C \"\$NEW_RELEASE_DIR\"
            rm -f \"/tmp/shophikes_${SHORT_SHA}.tar.gz\"
            ln -sfn \"\$NEW_RELEASE_DIR\" \"\$CURRENT_LINK\"
            if ! command -v pm2 >/dev/null 2>&1; then npm i -g pm2; fi
            mv /tmp/ecosystem.config.js '${APP_DIR}'/ecosystem.config.js
            pm2 delete shophikes >/dev/null 2>&1 || true
            pm2 start '${APP_DIR}'/ecosystem.config.js --only shophikes
            pm2 save
          "
